name: sync Typescript

on:
  push:
    branches: [ main ]
  workflow_dispatch: {}

permissions:
  contents: read

env:
  PROTOC_VERSION: "32.0"
  PNPM_VERSION: "10.15.1"

jobs:
  codegen:
    runs-on: ${{ matrix.os }}
    strategy:
      fail-fast: false
      matrix:
        os: [ ubuntu-24.04, ubuntu-24.04-arm, macos-15, macos-14 ]

    steps:
      - name: Checkout
        uses: actions/checkout@08c6903cd8c0fde910a37f88322edcfb5dd907a8 # v5.0.0

      - name: Compute protoc archive name
        id: protoc-arch
        shell: bash
        run: |
          set -eu
          V="${PROTOC_VERSION}"
          OS="${{ runner.os }}"
          ARCH="${{ runner.arch }}"

          case "$OS" in
            Linux)  OS_ID="linux" ;;
            macOS)  OS_ID="osx" ;;
            *) echo "Unsupported OS: $OS" >&2; exit 1 ;;
          esac

          case "$ARCH" in
            X64)   CPU_ID="x86_64" ;;
            ARM64) CPU_ID="aarch_64" ;;
            *) echo "Unsupported arch: $ARCH" >&2; exit 1 ;;
          esac

          FILE="protoc-${V}-${OS_ID}-${CPU_ID}.zip"
          TAG="v${V}"

          echo "file=$FILE" >> "$GITHUB_OUTPUT"
          echo "tag=$TAG"   >> "$GITHUB_OUTPUT"

      - name: Restore protoc cache
        id: protoc-cache
        uses: actions/cache@0400d5f644dc74513175e3cd8d07132dd4860809 # v4.2.4
        with:
          path: ~/.protoc
          key: protoc-${{ steps.protoc-arch.outputs.tag }}-${{ steps.protoc-arch.outputs.file }}-${{ runner.os }}

      - name: Install protoc ${{ env.PROTOC_VERSION }}
        if: steps.protoc-cache.outputs.cache-hit != 'true'
        shell: bash
        run: |
          set -eux
          mkdir -p "$HOME/.protoc"
          FILE="${{ steps.protoc-arch.outputs.file }}"
          TAG="${{ steps.protoc-arch.outputs.tag }}"
          URL="https://github.com/protocolbuffers/protobuf/releases/download/${TAG}/${FILE}"
          echo "Downloading $URL"
          curl -sSfL -o "$FILE" "$URL"
          unzip -o "$FILE" -d "$HOME/.protoc"
          rm -f "$FILE"
          echo "$HOME/.protoc/bin" >> "$GITHUB_PATH"
          echo "PROTOC_INCLUDE=$HOME/.protoc/include" >> "$GITHUB_ENV"

      - name: Add protoc to PATH and env (cache hit)
        if: steps.protoc-cache.outputs.cache-hit == 'true'
        shell: bash
        run: |
          echo "$HOME/.protoc/bin" >> "$GITHUB_PATH"
          echo "PROTOC_INCLUDE=$HOME/.protoc/include" >> "$GITHUB_ENV"

      - name: Verify protoc
        shell: bash
        run: |
          set -eux
          protoc --version
          test -d "$PROTOC_INCLUDE"

      - name: Compute pnpm filename
        id: pnpm-arch
        shell: bash
        run: |
          set -eu
          V="${PNPM_VERSION}"
          OS="${{ runner.os }}"
          ARCH="${{ runner.arch }}"

          case "$OS" in
            Linux)  OS_ID="linux" ;;
            macOS)  OS_ID="macos" ;;
            *) echo "Unsupported OS: $OS" >&2; exit 1 ;;
          esac

          case "$ARCH" in
            X64)   CPU_ID="x64" ;;
            ARM64) CPU_ID="arm64" ;;
            *) echo "Unsupported arch: $ARCH" >&2; exit 1 ;;
          esac

          FILE="pnpm-${OS_ID}-${CPU_ID}"
          TAG="v${V}"

          echo "file=$FILE" >> "$GITHUB_OUTPUT"
          echo "tag=$TAG"   >> "$GITHUB_OUTPUT"

      - name: Restore pnpm binary cache
        id: pnpm-cache
        uses: actions/cache@0400d5f644dc74513175e3cd8d07132dd4860809 # v4.2.4
        with:
          path: ~/.pnpm-bin
          key: pnpm-${{ steps.pnpm-arch.outputs.tag }}-${{ steps.pnpm-arch.outputs.file }}-${{ runner.os }}

      - name: Install pnpm ${{ env.PNPM_VERSION }} from GitHub
        if: steps.pnpm-cache.outputs.cache-hit != 'true'
        shell: bash
        run: |
          set -eux
          mkdir -p "$HOME/.pnpm-bin"
          FILE="${{ steps.pnpm-arch.outputs.file }}"
          TAG="${{ steps.pnpm-arch.outputs.tag }}"
          URL="https://github.com/pnpm/pnpm/releases/download/${TAG}/${FILE}"
          echo "Downloading $URL"
          curl -sSfL -o "$HOME/.pnpm-bin/pnpm" "$URL"
          chmod +x "$HOME/.pnpm-bin/pnpm"
          echo "$HOME/.pnpm-bin" >> "$GITHUB_PATH"

      - name: Add pnpm to PATH (cache hit)
        if: steps.pnpm-cache.outputs.cache-hit == 'true'
        shell: bash
        run: |
          echo "$HOME/.pnpm-bin" >> "$GITHUB_PATH"

      - name: Verify pnpm
        shell: bash
        run: |
          set -eux
          pnpm --version

      - name: Enable pnpm store cache
        uses: actions/setup-node@49933ea5288caeca8642d1e84afbd3f7d6820020 # v4.4.0
        with:
          node-version: "24"
          cache: 'pnpm'
          cache-dependency-path: 'deps/ts-proto/pnpm-lock.yaml'

      - name: Install deps with pnpm
        shell: bash
        run: |
          set -eux
          pnpm install --dir deps/ts-proto --frozen-lockfile

      - name: Build sources
        shell: bash
        run: |
          set -eux
          mkdir build
          find src -type f -name '*.proto' \
          -exec protoc \
          --plugin=./deps/ts-proto/node_modules/.bin/protoc-gen-ts_proto \
          -I src \
          --ts_proto_out=./build \
          --ts_proto_opt=esModuleInterop=true \
          --ts_proto_opt=env=browser \
          --ts_proto_opt=removeEnumPrefix=true \
          --ts_proto_opt=fileSuffix=.pb \
          --ts_proto_opt=outputJsonMethods=false {} \;

      - name: Checkout proto-ts
        uses: actions/checkout@08c6903cd8c0fde910a37f88322edcfb5dd907a8 # v5.0.0
        with:
          repository: 'cpay-dev/proto-ts-pub'
          path: 'proto-ts-pub'

      - name: Sync sources
        run: |
          set -eux
          test -d build || { echo "build dir not found"; exit 1; }
          rm -rf 'proto-ts-pub/src'
          mkdir 'proto-ts-pub/src'
          cp -r ./build proto-ts-pub/src

      - name: Validate ts library builds
        working-directory: 'proto-ts-pub'
        run: |
          set -eux
          pnpm install --frozen-lockfile
          pnpm run build

      - name: Commit and push to ts-proto
        working-directory: 'proto-ts-pub'
        env:
         REV: ${{ github.sha }}
        run: |
          set -eux
          echo "REV: $REV"
          git config user.name "cpay.dev GIT BOT"
          git config user.email "203521523+cpay-dev-git@users.noreply.github.com"
          git checkout -B "$(git rev-parse HEAD)"
          git add -A
          if git diff --cached --quiet; then
            echo "No changes to commit"
            exit 0
          fi
          git commit -m "sync: github.com/cpay-dev/proto-registry-pub/commit/${{ github.sha }}"
